class Solution {
public:
    bool is_poss(vector<vector<char>>& a, int ii, int jj, char num) {
        for (int i = 0; i < 9; i++) {
            if (a[i][jj] == num || a[ii][i] == num)
                return false;
        }

        int row = (ii / 3) * 3;
        int col = (jj / 3) * 3;

        for (int i = row; i < row + 3; i++) {
            for (int j = col; j < col + 3; j++) {
                if (a[i][j] == num)
                    return false;
            }
        }

        return true;
    }

    bool fn(vector<vector<char>>& a, int i, int j) {
        if (i == 9) return true;
        if (j == 9) return fn(a, i + 1, 0);
        if (a[i][j] != '.') return fn(a, i, j + 1);

        for (char num = '1'; num <= '9'; num++) {
            if (is_poss(a, i, j, num)) {
                a[i][j] = num;
                if (fn(a, i, j + 1))return true;
                a[i][j] = '.';
            }
        }

        return false;
    }

    void solveSudoku(vector<vector<char>>& a) {
        fn(a, 0, 0);
    }
};
